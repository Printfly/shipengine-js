/* tslint:disable */
/* eslint-disable */
/**
 * ShipEngine API
 * ShipEngine\'s easy-to-use REST API lets you manage all of your shipping needs without worrying about the complexities of different carrier APIs and protocols. We handle all the heavy lifting so you can focus on providing a first-class shipping experience for your customers at the best possible prices.  Each of ShipEngine\'s features can be used by itself or in conjunction with each other to build powerful shipping functionality into your application or service.  ## Getting Started If you\'re new to REST APIs then be sure to read our [introduction to REST](https://www.shipengine.com/docs/rest/) to understand the basics.  Learn how to [authenticate yourself to ShipEngine](https://www.shipengine.com/docs/auth/), and then use our [sandbox environment](https://www.shipengine.com/docs/sandbox/) to kick the tires and get familiar with our API. If you run into any problems, then be sure to check the [error handling guide](https://www.shipengine.com/docs/errors/) for tips.  Here are some step-by-step **tutorials** to get you started:    - [Learn how to create your first shipping label](https://www.shipengine.com/docs/labels/create-a-label/)   - [Calculate shipping costs and compare rates across carriers](https://www.shipengine.com/docs/rates/)   - [Track packages on-demand or in real time](https://www.shipengine.com/docs/tracking/)   - [Validate mailing addresses anywhere on Earth](https://www.shipengine.com/docs/addresses/validation/)   ## Shipping Labels for Every Major Carrier ShipEngine makes it easy to [create shipping labels for any carrier](https://www.shipengine.com/docs/labels/create-a-label/) and [download them](https://www.shipengine.com/docs/labels/downloading/) in a [variety of file formats](https://www.shipengine.com/docs/labels/formats/). You can even customize labels with your own [messages](https://www.shipengine.com/docs/labels/messages/) and [images](https://www.shipengine.com/docs/labels/branding/).   ## Real-Time Package Tracking With ShipEngine you can [get the current status of a package](https://www.shipengine.com/docs/tracking/) or [subscribe to real-time tracking updates](https://www.shipengine.com/docs/tracking/webhooks/) via webhooks. You can also create [custimized tracking pages](https://www.shipengine.com/docs/tracking/branded-tracking-page/) with your own branding so your customers will always know where their package is.   ## Compare Shipping Costs Across Carriers Make sure you ship as cost-effectively as possible by [comparing rates across carriers](https://www.shipengine.com/docs/rates/get-shipment-rates/) using the ShipEngine Rates API. Or if you don\'t know the full shipment details yet, then you can [get rate estimates](https://www.shipengine.com/docs/rates/estimate/) with limited address info.   ## Worldwide Address Validation ShipEngine supports [address validation](https://www.shipengine.com/docs/addresses/validation/) for virtually [every country on Earth](https://www.shipengine.com/docs/addresses/validation/countries/), including the United States, Canada, Great Britain, Australia, Germany, France, Norway, Spain, Sweden, Israel, Italy, and over 160 others. 
 *
 * The version of the OpenAPI document: 1.1.202010261510
 * Contact: sales@shipengine.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    DisplayScheme,
    DisplaySchemeFromJSON,
    DisplaySchemeFromJSONTyped,
    DisplaySchemeToJSON,
    LabelChargeEvent,
    LabelChargeEventFromJSON,
    LabelChargeEventFromJSONTyped,
    LabelChargeEventToJSON,
    LabelDownload,
    LabelDownloadFromJSON,
    LabelDownloadFromJSONTyped,
    LabelDownloadToJSON,
    LabelDownloadType,
    LabelDownloadTypeFromJSON,
    LabelDownloadTypeFromJSONTyped,
    LabelDownloadTypeToJSON,
    LabelFormat,
    LabelFormatFromJSON,
    LabelFormatFromJSONTyped,
    LabelFormatToJSON,
    LabelLayout,
    LabelLayoutFromJSON,
    LabelLayoutFromJSONTyped,
    LabelLayoutToJSON,
    LabelStatus,
    LabelStatusFromJSON,
    LabelStatusFromJSONTyped,
    LabelStatusToJSON,
    Link,
    LinkFromJSON,
    LinkFromJSONTyped,
    LinkToJSON,
    MonetaryValue,
    MonetaryValueFromJSON,
    MonetaryValueFromJSONTyped,
    MonetaryValueToJSON,
    Package,
    PackageFromJSON,
    PackageFromJSONTyped,
    PackageToJSON,
    Shipment,
    ShipmentFromJSON,
    ShipmentFromJSONTyped,
    ShipmentToJSON,
    TrackingStatus,
    TrackingStatusFromJSON,
    TrackingStatusFromJSONTyped,
    TrackingStatusToJSON,
    ValidateAddress,
    ValidateAddressFromJSON,
    ValidateAddressFromJSONTyped,
    ValidateAddressToJSON,
} from './';

/**
 * A label represents the physical sticker that you affix to a package to ship it.  ShipEngine makes it easy for you to [create labels](https://www.shipengine.com/docs/labels/create-a-label/) and then download them in PDF, PNG, or ZPL format so you can print them.
 * @export
 * @interface Label
 */
export interface Label {
    /**
     * A string that uniquely identifies the label. This ID is generated by ShipEngine when the label is created.
     * @type {string}
     * @memberof Label
     */
    readonly labelId?: string;
    /**
     * 
     * @type {LabelStatus}
     * @memberof Label
     */
    readonly status?: LabelStatus;
    /**
     * The shipment that this label is for.  ShipEngine can create a shipment for you automatically when you [create a label](https://www.shipengine.com/docs/labels/create-a-label/), or you can [create your own shipment](https://www.shipengine.com/docs/shipping/create-a-shipment/) and then [use it to print a label](https://www.shipengine.com/docs/labels/create-from-shipment/)
     * @type {string}
     * @memberof Label
     */
    readonly shipmentId?: string;
    /**
     * The shipment information used to generate the label
     * @type {Shipment}
     * @memberof Label
     */
    shipment?: Shipment;
    /**
     * The date that the package was (or will be) shippped.  ShipEngine will take the day of week into consideration. For example, if the carrier does not operate on Sundays, then a package that would have shipped on Sunday will ship on Monday instead.
     * @type {Date}
     * @memberof Label
     */
    readonly shipDate?: Date;
    /**
     * The date and time that the label was created in ShipEngine.
     * @type {Date}
     * @memberof Label
     */
    readonly createdAt?: Date;
    /**
     * The cost of shipping, delivery confirmation, and other carrier charges.  This amount **does not** include insurance costs.
     * @type {MonetaryValue}
     * @memberof Label
     */
    readonly shipmentCost?: MonetaryValue;
    /**
     * The insurance cost for this package.  Add this to the `shipment_cost` field to get the total cost.
     * @type {MonetaryValue}
     * @memberof Label
     */
    readonly insuranceCost?: MonetaryValue;
    /**
     * The tracking number for the package. Tracking number formats vary across carriers.
     * @type {string}
     * @memberof Label
     */
    readonly trackingNumber?: string;
    /**
     * Indicates whether this is a return label.  You may also want to set the `rma_number` so you know what is being returned.
     * @type {boolean}
     * @memberof Label
     */
    isReturnLabel?: boolean;
    /**
     * An optional Return Merchandise Authorization number.  This field is useful for return labels.  You can set it to any string value.
     * @type {string}
     * @memberof Label
     */
    rmaNumber?: string | null;
    /**
     * Indicates whether this is an international shipment.  That is, the originating country and destination country are different.
     * @type {boolean}
     * @memberof Label
     */
    readonly isInternational?: boolean;
    /**
     * If this label was created as part of a [batch](https://www.shipengine.com/docs/labels/bulk/), then this is the unique ID of that batch.
     * @type {string}
     * @memberof Label
     */
    readonly batchId?: string;
    /**
     * The unique ID of the [carrier account](https://www.shipengine.com/docs/carriers/setup/) that was used to create this label
     * @type {string}
     * @memberof Label
     */
    readonly carrierId?: string;
    /**
     * The label charge event.
     * @type {LabelChargeEvent}
     * @memberof Label
     */
    chargeEvent?: LabelChargeEvent;
    /**
     * The `label_id` of the original (outgoing) label that the return label is for. This associates the two labels together, which is
     * required by some carriers.
     * @type {string}
     * @memberof Label
     */
    outboundLabelId?: string;
    /**
     * The [carrier service](https://www.shipengine.com/docs/shipping/use-a-carrier-service/) used to ship the package, such as `fedex_ground`, `usps_first_class_mail`, `flat_rate_envelope`, etc.
     * @type {string}
     * @memberof Label
     */
    readonly serviceCode?: string;
    /**
     * Indicate if this label is being used only for testing purposes. If true, then no charge will be added to your account.
     * @type {boolean}
     * @memberof Label
     */
    testLabel?: boolean;
    /**
     * The [package type](https://www.shipengine.com/docs/reference/list-carrier-packages/), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  The code `package` indicates a custom or unknown package type.
     * @type {string}
     * @memberof Label
     */
    readonly packageCode?: string;
    /**
     * 
     * @type {ValidateAddress}
     * @memberof Label
     */
    validateAddress?: ValidateAddress;
    /**
     * Indicates whether the label has been [voided](https://www.shipengine.com/docs/labels/voiding/)
     * @type {boolean}
     * @memberof Label
     */
    readonly voided?: boolean;
    /**
     * The date and time that the label was [voided](https://www.shipengine.com/docs/labels/voiding/), or `null` if the label has not been voided
     * @type {Date}
     * @memberof Label
     */
    readonly voidedAt?: Date | null;
    /**
     * 
     * @type {LabelDownloadType}
     * @memberof Label
     */
    labelDownloadType?: LabelDownloadType;
    /**
     * The file format that you want the label to be in.  We recommend `pdf` format because it is supported by all carriers, whereas some carriers do not support the `png` or `zpl` formats.
     * @type {LabelFormat}
     * @memberof Label
     */
    labelFormat?: LabelFormat;
    /**
     * The display format that the label should be shown in.
     * @type {DisplayScheme}
     * @memberof Label
     */
    displayScheme?: DisplayScheme;
    /**
     * The layout (size) that you want the label to be in.  The `label_format` determines which sizes are allowed.  `4x6` is supported for all label formats, whereas `letter` (8.5" x 11") is only supported for `pdf` format.
     * @type {LabelLayout}
     * @memberof Label
     */
    labelLayout?: LabelLayout;
    /**
     * Indicates whether the shipment is trackable, in which case the `tracking_status` field will reflect the current status and each package will have a `tracking_number`.
     * @type {boolean}
     * @memberof Label
     */
    readonly trackable?: boolean;
    /**
     * The label image resource that was used to create a custom label image.
     * @type {string}
     * @memberof Label
     */
    labelImageId?: string | null;
    /**
     * The [shipping carrier](https://www.shipengine.com/docs/carriers/setup/) who will ship the package, such as `fedex`, `dhl_express`, `stamps_com`, etc.
     * @type {string}
     * @memberof Label
     */
    readonly carrierCode?: string;
    /**
     * The current status of the package, such as `in_transit` or `delivered`
     * @type {TrackingStatus}
     * @memberof Label
     */
    readonly trackingStatus?: TrackingStatus;
    /**
     * 
     * @type {LabelDownload}
     * @memberof Label
     */
    readonly labelDownload?: LabelDownload;
    /**
     * The link to downlaod the customs form (a.k.a. commercial invoice) for this shipment, if any.  Forms are in PDF format. This field is null if the shipment does not require a customs form, or if the carrier does not support it.
     * @type {Link}
     * @memberof Label
     */
    readonly formDownload?: Link | null;
    /**
     * The link to submit an insurance claim for the shipment.  This field is null if the shipment is not insured or if the insurance provider does not support online claim submission.
     * @type {Link}
     * @memberof Label
     */
    readonly insuranceClaim?: Link | null;
    /**
     * The label's package(s).
     * 
     * > **Note:** Some carriers only allow one package per label.  If you attempt to create a multi-package label for a carrier that doesn't allow it, an error will be returned.
     * @type {Array<Package>}
     * @memberof Label
     */
    readonly packages?: Array<Package>;
}

export function LabelFromJSON(json: any): Label {
    return LabelFromJSONTyped(json, false);
}

export function LabelFromJSONTyped(json: any, ignoreDiscriminator: boolean): Label {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'labelId': !exists(json, 'label_id') ? undefined : json['label_id'],
        'status': !exists(json, 'status') ? undefined : LabelStatusFromJSON(json['status']),
        'shipmentId': !exists(json, 'shipment_id') ? undefined : json['shipment_id'],
        'shipment': !exists(json, 'shipment') ? undefined : ShipmentFromJSON(json['shipment']),
        'shipDate': !exists(json, 'ship_date') ? undefined : json['ship_date'],
        'createdAt': !exists(json, 'created_at') ? undefined : json['created_at'],
        'shipmentCost': !exists(json, 'shipment_cost') ? undefined : MonetaryValueFromJSON(json['shipment_cost']),
        'insuranceCost': !exists(json, 'insurance_cost') ? undefined : MonetaryValueFromJSON(json['insurance_cost']),
        'trackingNumber': !exists(json, 'tracking_number') ? undefined : json['tracking_number'],
        'isReturnLabel': !exists(json, 'is_return_label') ? undefined : json['is_return_label'],
        'rmaNumber': !exists(json, 'rma_number') ? undefined : json['rma_number'],
        'isInternational': !exists(json, 'is_international') ? undefined : json['is_international'],
        'batchId': !exists(json, 'batch_id') ? undefined : json['batch_id'],
        'carrierId': !exists(json, 'carrier_id') ? undefined : json['carrier_id'],
        'chargeEvent': !exists(json, 'charge_event') ? undefined : LabelChargeEventFromJSON(json['charge_event']),
        'outboundLabelId': !exists(json, 'outbound_label_id') ? undefined : json['outbound_label_id'],
        'serviceCode': !exists(json, 'service_code') ? undefined : json['service_code'],
        'testLabel': !exists(json, 'test_label') ? undefined : json['test_label'],
        'packageCode': !exists(json, 'package_code') ? undefined : json['package_code'],
        'validateAddress': !exists(json, 'validate_address') ? undefined : ValidateAddressFromJSON(json['validate_address']),
        'voided': !exists(json, 'voided') ? undefined : json['voided'],
        'voidedAt': !exists(json, 'voided_at') ? undefined : json['voided_at'],
        'labelDownloadType': !exists(json, 'label_download_type') ? undefined : LabelDownloadTypeFromJSON(json['label_download_type']),
        'labelFormat': !exists(json, 'label_format') ? undefined : LabelFormatFromJSON(json['label_format']),
        'displayScheme': !exists(json, 'display_scheme') ? undefined : DisplaySchemeFromJSON(json['display_scheme']),
        'labelLayout': !exists(json, 'label_layout') ? undefined : LabelLayoutFromJSON(json['label_layout']),
        'trackable': !exists(json, 'trackable') ? undefined : json['trackable'],
        'labelImageId': !exists(json, 'label_image_id') ? undefined : json['label_image_id'],
        'carrierCode': !exists(json, 'carrier_code') ? undefined : json['carrier_code'],
        'trackingStatus': !exists(json, 'tracking_status') ? undefined : TrackingStatusFromJSON(json['tracking_status']),
        'labelDownload': !exists(json, 'label_download') ? undefined : LabelDownloadFromJSON(json['label_download']),
        'formDownload': !exists(json, 'form_download') ? undefined : LinkFromJSON(json['form_download']),
        'insuranceClaim': !exists(json, 'insurance_claim') ? undefined : LinkFromJSON(json['insurance_claim']),
        'packages': !exists(json, 'packages') ? undefined : ((json['packages'] as Array<any>).map(PackageFromJSON)),
    };
}

export function LabelToJSON(value?: Label | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'shipment': ShipmentToJSON(value.shipment),
        'is_return_label': value.isReturnLabel,
        'rma_number': value.rmaNumber,
        'charge_event': LabelChargeEventToJSON(value.chargeEvent),
        'outbound_label_id': value.outboundLabelId,
        'test_label': value.testLabel,
        'validate_address': ValidateAddressToJSON(value.validateAddress),
        'label_download_type': LabelDownloadTypeToJSON(value.labelDownloadType),
        'label_format': LabelFormatToJSON(value.labelFormat),
        'display_scheme': DisplaySchemeToJSON(value.displayScheme),
        'label_layout': LabelLayoutToJSON(value.labelLayout),
        'label_image_id': value.labelImageId,
    };
}


