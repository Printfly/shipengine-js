/* tslint:disable */
/* eslint-disable */
/**
 * ShipEngine API
 * ShipEngine\'s easy-to-use REST API lets you manage all of your shipping needs without worrying about the complexities of different carrier APIs and protocols. We handle all the heavy lifting so you can focus on providing a first-class shipping experience for your customers at the best possible prices.  Each of ShipEngine\'s features can be used by itself or in conjunction with each other to build powerful shipping functionality into your application or service.  ## Getting Started If you\'re new to REST APIs then be sure to read our [introduction to REST](https://www.shipengine.com/docs/rest/) to understand the basics.  Learn how to [authenticate yourself to ShipEngine](https://www.shipengine.com/docs/auth/), and then use our [sandbox environment](https://www.shipengine.com/docs/sandbox/) to kick the tires and get familiar with our API. If you run into any problems, then be sure to check the [error handling guide](https://www.shipengine.com/docs/errors/) for tips.  Here are some step-by-step **tutorials** to get you started:    - [Learn how to create your first shipping label](https://www.shipengine.com/docs/labels/create-a-label/)   - [Calculate shipping costs and compare rates across carriers](https://www.shipengine.com/docs/rates/)   - [Track packages on-demand or in real time](https://www.shipengine.com/docs/tracking/)   - [Validate mailing addresses anywhere on Earth](https://www.shipengine.com/docs/addresses/validation/)   ## Shipping Labels for Every Major Carrier ShipEngine makes it easy to [create shipping labels for any carrier](https://www.shipengine.com/docs/labels/create-a-label/) and [download them](https://www.shipengine.com/docs/labels/downloading/) in a [variety of file formats](https://www.shipengine.com/docs/labels/formats/). You can even customize labels with your own [messages](https://www.shipengine.com/docs/labels/messages/) and [images](https://www.shipengine.com/docs/labels/branding/).   ## Real-Time Package Tracking With ShipEngine you can [get the current status of a package](https://www.shipengine.com/docs/tracking/) or [subscribe to real-time tracking updates](https://www.shipengine.com/docs/tracking/webhooks/) via webhooks. You can also create [custimized tracking pages](https://www.shipengine.com/docs/tracking/branded-tracking-page/) with your own branding so your customers will always know where their package is.   ## Compare Shipping Costs Across Carriers Make sure you ship as cost-effectively as possible by [comparing rates across carriers](https://www.shipengine.com/docs/rates/get-shipment-rates/) using the ShipEngine Rates API. Or if you don\'t know the full shipment details yet, then you can [get rate estimates](https://www.shipengine.com/docs/rates/estimate/) with limited address info.   ## Worldwide Address Validation ShipEngine supports [address validation](https://www.shipengine.com/docs/addresses/validation/) for virtually [every country on Earth](https://www.shipengine.com/docs/addresses/validation/countries/), including the United States, Canada, Great Britain, Australia, Germany, France, Norway, Spain, Sweden, Israel, Italy, and over 160 others. 
 *
 * The version of the OpenAPI document: 1.1.202010261510
 * Contact: sales@shipengine.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * A rate
 * @export
 * @interface Rate1
 */
export interface Rate1 {
    /**
     * A string that uniquely identifies the rate
     * @type {string}
     * @memberof Rate1
     */
    readonly rateId: string;
    /**
     * 
     * @type {string}
     * @memberof Rate1
     */
    readonly rateType: string;
    /**
     * A string that uniquely identifies the carrier
     * @type {string}
     * @memberof Rate1
     */
    readonly carrierId: string;
    /**
     * The shipping amount
     * @type {object}
     * @memberof Rate1
     */
    readonly shippingAmount: object;
    /**
     * The insurance amount
     * @type {object}
     * @memberof Rate1
     */
    readonly insuranceAmount: object;
    /**
     * The confirmation amount
     * @type {object}
     * @memberof Rate1
     */
    readonly confirmationAmount: object;
    /**
     * Any other charges associated with this rate
     * @type {object}
     * @memberof Rate1
     */
    readonly otherAmount: object;
    /**
     * Tariff and additional taxes associated with an international shipment.
     * @type {object}
     * @memberof Rate1
     */
    readonly taxAmount?: object;
    /**
     * Certain carriers base [their rates](https://blog.stamps.com/2017/09/08/usps-postal-zones/) off of
     * custom zones that vary depending upon the ship_to and ship_from location
     * @type {number}
     * @memberof Rate1
     */
    readonly zone: number | null;
    /**
     * package type that this rate was estimated for
     * @type {string}
     * @memberof Rate1
     */
    readonly packageType: string | null;
    /**
     * The number of days estimated for delivery, this will show the _actual_ delivery
     * time if for example, the package gets shipped on a Friday
     * @type {number}
     * @memberof Rate1
     */
    readonly deliveryDays?: number;
    /**
     * Indicates if the rate is guaranteed.
     * @type {boolean}
     * @memberof Rate1
     */
    readonly guaranteedService: boolean;
    /**
     * 
     * @type {Date}
     * @memberof Rate1
     */
    readonly estimatedDeliveryDate?: Date;
    /**
     * The carrier delivery days
     * @type {string}
     * @memberof Rate1
     */
    readonly carrierDeliveryDays?: string;
    /**
     * ship date
     * @type {Date}
     * @memberof Rate1
     */
    readonly shipDate?: Date;
    /**
     * Indicates if the rates been negotiated
     * @type {boolean}
     * @memberof Rate1
     */
    readonly negotiatedRate: boolean;
    /**
     * service type
     * @type {string}
     * @memberof Rate1
     */
    readonly serviceType: string;
    /**
     * service code for the rate
     * @type {string}
     * @memberof Rate1
     */
    readonly serviceCode: string;
    /**
     * Indicates if rate is trackable
     * @type {boolean}
     * @memberof Rate1
     */
    readonly trackable: boolean;
    /**
     * carrier code
     * @type {string}
     * @memberof Rate1
     */
    readonly carrierCode: string;
    /**
     * carrier nickname
     * @type {string}
     * @memberof Rate1
     */
    readonly carrierNickname: string;
    /**
     * carrier friendly name
     * @type {string}
     * @memberof Rate1
     */
    readonly carrierFriendlyName: string;
    /**
     * 
     * @type {string}
     * @memberof Rate1
     */
    readonly validationStatus: string;
    /**
     * The warning messages
     * @type {Array<string>}
     * @memberof Rate1
     */
    readonly warningMessages: Array<string>;
    /**
     * The error messages
     * @type {Array<string>}
     * @memberof Rate1
     */
    readonly errorMessages: Array<string>;
}

export function Rate1FromJSON(json: any): Rate1 {
    return Rate1FromJSONTyped(json, false);
}

export function Rate1FromJSONTyped(json: any, ignoreDiscriminator: boolean): Rate1 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'rateId': json['rate_id'],
        'rateType': json['rate_type'],
        'carrierId': json['carrier_id'],
        'shippingAmount': json['shipping_amount'],
        'insuranceAmount': json['insurance_amount'],
        'confirmationAmount': json['confirmation_amount'],
        'otherAmount': json['other_amount'],
        'taxAmount': !exists(json, 'tax_amount') ? undefined : json['tax_amount'],
        'zone': json['zone'],
        'packageType': json['package_type'],
        'deliveryDays': !exists(json, 'delivery_days') ? undefined : json['delivery_days'],
        'guaranteedService': json['guaranteed_service'],
        'estimatedDeliveryDate': !exists(json, 'estimated_delivery_date') ? undefined : json['estimated_delivery_date'],
        'carrierDeliveryDays': !exists(json, 'carrier_delivery_days') ? undefined : json['carrier_delivery_days'],
        'shipDate': !exists(json, 'ship_date') ? undefined : (new Date(json['ship_date'])),
        'negotiatedRate': json['negotiated_rate'],
        'serviceType': json['service_type'],
        'serviceCode': json['service_code'],
        'trackable': json['trackable'],
        'carrierCode': json['carrier_code'],
        'carrierNickname': json['carrier_nickname'],
        'carrierFriendlyName': json['carrier_friendly_name'],
        'validationStatus': json['validation_status'],
        'warningMessages': json['warning_messages'],
        'errorMessages': json['error_messages'],
    };
}

export function Rate1ToJSON(value?: Rate1 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
    };
}


